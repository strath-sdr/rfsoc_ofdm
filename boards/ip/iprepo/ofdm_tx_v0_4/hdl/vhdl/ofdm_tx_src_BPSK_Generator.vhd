-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\OFDM_Tx_HW\ofdm_tx_src_BPSK_Generator.vhd
-- Created: 2022-03-24 21:51:00
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_tx_src_BPSK_Generator
-- Source Path: OFDM_Tx_HW/OFDMTx/DataGenerator/RF Signal Generator/Variable Modulator/BPSK Generator
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_tx_src_BPSK_Generator IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_12_0                        :   IN    std_logic;
        Data                              :   IN    std_logic;  -- ufix1
        Reset_1                           :   IN    std_logic;
        Enable                            :   IN    std_logic;
        I_symbols                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END ofdm_tx_src_BPSK_Generator;


ARCHITECTURE rtl OF ofdm_tx_src_BPSK_Generator IS

  -- Signals
  SIGNAL reduced_reg                      : std_logic_vector(0 TO 1);  -- ufix1 [2]
  SIGNAL Reset_2                          : std_logic;
  SIGNAL Constant3_out1                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Constant2_out1                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Multiport_Switch_out1            : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_iv                         : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_delOut                     : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_ectrl                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_toDelay                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_bypassIn                   : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_out1                       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Delay_last_value                 : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      reduced_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        reduced_reg(0) <= Reset_1;
        reduced_reg(1) <= reduced_reg(0);
      END IF;
    END IF;
  END PROCESS reduced_process;

  Reset_2 <= reduced_reg(1);

  Constant3_out1 <= to_signed(-16#4000#, 16);

  Constant2_out1 <= to_signed(16#4000#, 16);

  
  Multiport_Switch_out1 <= Constant3_out1 WHEN Data = '0' ELSE
      Constant2_out1;

  Delay_iv <= to_signed(16#0000#, 16);

  
  Delay_ectrl <= Delay_delOut WHEN Enable = '0' ELSE
      Multiport_Switch_out1;

  
  Delay_toDelay <= Delay_ectrl WHEN Reset_2 = '0' ELSE
      Delay_iv;

  Delay_lowered_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_delOut <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay_delOut <= Delay_toDelay;
      END IF;
    END IF;
  END PROCESS Delay_lowered_process;


  
  Delay_bypassIn <= Delay_delOut WHEN Reset_2 = '0' ELSE
      Delay_iv;

  Delay_bypass_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_last_value <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay_last_value <= Delay_out1;
      END IF;
    END IF;
  END PROCESS Delay_bypass_process;


  
  Delay_out1 <= Delay_last_value WHEN Enable = '0' ELSE
      Delay_bypassIn;

  I_symbols <= std_logic_vector(Delay_out1);

END rtl;

