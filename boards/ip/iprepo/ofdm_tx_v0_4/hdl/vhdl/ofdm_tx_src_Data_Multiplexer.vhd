-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\OFDM_Tx_HW\ofdm_tx_src_Data_Multiplexer.vhd
-- Created: 2022-03-24 21:51:00
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_tx_src_Data_Multiplexer
-- Source Path: OFDM_Tx_HW/OFDMTx/DataGenerator/Data Multiplexer
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_tx_src_Data_Multiplexer IS
  PORT( symbols_re                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        symbols_im                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataready                         :   IN    std_logic;
        pilots_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        pilots_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        pval                              :   IN    std_logic;
        sts_re                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        sts_im                            :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        stsval                            :   IN    std_logic;
        lts                               :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        ltsval                            :   IN    std_logic;
        data_re                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        data_im                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
        );
END ofdm_tx_src_Data_Multiplexer;


ARCHITECTURE rtl OF ofdm_tx_src_Data_Multiplexer IS

  -- Signals
  SIGNAL symbols_re_signed                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL symbols_im_signed                : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL pilots_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL pilots_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL sts_re_signed                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL sts_im_signed                    : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL lts_signed                       : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL data_re_tmp                      : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL data_im_tmp                      : signed(15 DOWNTO 0);  -- sfix16_En14

BEGIN
  symbols_re_signed <= signed(symbols_re);

  symbols_im_signed <= signed(symbols_im);

  pilots_re_signed <= signed(pilots_re);

  pilots_im_signed <= signed(pilots_im);

  sts_re_signed <= signed(sts_re);

  sts_im_signed <= signed(sts_im);

  lts_signed <= signed(lts);

  Data_Multiplexer_output : PROCESS (dataready, lts_signed, ltsval, pilots_im_signed, pilots_re_signed, pval,
       sts_im_signed, sts_re_signed, stsval, symbols_im_signed,
       symbols_re_signed)
  BEGIN
    -- Data multiplexer 
    IF pval = '1' THEN 
      data_re_tmp <= pilots_re_signed;
      data_im_tmp <= pilots_im_signed;
    ELSIF stsval = '1' THEN 
      data_re_tmp <= sts_re_signed;
      data_im_tmp <= sts_im_signed;
    ELSIF ltsval = '1' THEN 
      data_re_tmp <= lts_signed;
      data_im_tmp <= to_signed(16#0000#, 16);
    ELSIF dataready = '1' THEN 
      data_re_tmp <= symbols_re_signed;
      data_im_tmp <= symbols_im_signed;
    ELSE 
      data_re_tmp <= to_signed(16#0000#, 16);
      data_im_tmp <= to_signed(16#0000#, 16);
    END IF;
  END PROCESS Data_Multiplexer_output;


  data_re <= std_logic_vector(data_re_tmp);

  data_im <= std_logic_vector(data_im_tmp);

END rtl;

