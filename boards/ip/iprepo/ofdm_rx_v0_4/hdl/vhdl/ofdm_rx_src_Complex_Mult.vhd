-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\OFDM_Rx_HW\ofdm_rx_src_Complex_Mult.vhd
-- Created: 2022-03-24 22:06:16
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_rx_src_Complex_Mult
-- Source Path: OFDM_Rx_HW/OFDMRx/ChannelEstEq/Equalise/Complex Mult
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_rx_src_Complex_Mult IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        enb_1_12_1                        :   IN    std_logic;
        enb_1_12_0                        :   IN    std_logic;
        In1_re                            :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
        In1_im                            :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
        In2_re                            :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En14
        In2_im                            :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En14
        Out1_re                           :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
        Out1_im                           :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En15
        );
END ofdm_rx_src_Complex_Mult;


ARCHITECTURE rtl OF ofdm_rx_src_Complex_Mult IS

  -- Signals
  SIGNAL In1_re_signed                    : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL In1_im_signed                    : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Delay4_out1_re                   : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Delay4_out1_im                   : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Delay4_out1_re_1                 : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Delay4_out1_im_1                 : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Product1_C2ReIm_1_C2ReIm_A       : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL In2_re_signed                    : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL In2_im_signed                    : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay5_out1_re                   : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay5_out1_im                   : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay5_out1_re_1                 : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Delay5_out1_im_1                 : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Product1_C2ReIm_2_C2ReIm_A       : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Product1_mul_temp                : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL Product1_Re_AC                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_Re_AC_1                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_C2ReIm_1_C2ReIm_B       : signed(21 DOWNTO 0);  -- sfix22_En14
  SIGNAL Product1_C2ReIm_2_C2ReIm_B       : signed(16 DOWNTO 0);  -- sfix17_En14
  SIGNAL Product12_mul_temp               : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL Product1_Re_BD                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product11_mul_temp               : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL Product1_Im_AD                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_Im_AD_1                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product13_mul_temp               : signed(38 DOWNTO 0);  -- sfix39_En28
  SIGNAL Product1_Im_BC                   : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_Re_BD_1                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL mulOutput                        : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_Im_BC_1                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL mulOutput_1                      : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_out1_re                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_out1_im                 : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_out1_re_1               : signed(17 DOWNTO 0);  -- sfix18_En15
  SIGNAL Product1_out1_im_1               : signed(17 DOWNTO 0);  -- sfix18_En15

BEGIN
  In1_re_signed <= signed(In1_re);

  In1_im_signed <= signed(In1_im);

  Delay4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay4_out1_re <= to_signed(16#000000#, 22);
      Delay4_out1_im <= to_signed(16#000000#, 22);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay4_out1_re <= In1_re_signed;
        Delay4_out1_im <= In1_im_signed;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Delay4_out1_re_1 <= Delay4_out1_re;

  reduced_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_C2ReIm_1_C2ReIm_A <= to_signed(16#000000#, 22);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_C2ReIm_1_C2ReIm_A <= Delay4_out1_re_1;
      END IF;
    END IF;
  END PROCESS reduced_process;


  In2_re_signed <= signed(In2_re);

  In2_im_signed <= signed(In2_im);

  Delay5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay5_out1_re <= to_signed(16#00000#, 17);
      Delay5_out1_im <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay5_out1_re <= In2_re_signed;
        Delay5_out1_im <= In2_im_signed;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  Delay5_out1_re_1 <= Delay5_out1_re;

  reduced_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_C2ReIm_2_C2ReIm_A <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_C2ReIm_2_C2ReIm_A <= Delay5_out1_re_1;
      END IF;
    END IF;
  END PROCESS reduced_1_process;


  Product1_mul_temp <= Product1_C2ReIm_1_C2ReIm_A * Product1_C2ReIm_2_C2ReIm_A;
  Product1_Re_AC <= Product1_mul_temp(30 DOWNTO 13);

  PipelineRegister_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_Re_AC_1 <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_Re_AC_1 <= Product1_Re_AC;
      END IF;
    END IF;
  END PROCESS PipelineRegister_process;


  Delay4_out1_im_1 <= Delay4_out1_im;

  reduced_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_C2ReIm_1_C2ReIm_B <= to_signed(16#000000#, 22);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_C2ReIm_1_C2ReIm_B <= Delay4_out1_im_1;
      END IF;
    END IF;
  END PROCESS reduced_2_process;


  Delay5_out1_im_1 <= Delay5_out1_im;

  reduced_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_C2ReIm_2_C2ReIm_B <= to_signed(16#00000#, 17);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_C2ReIm_2_C2ReIm_B <= Delay5_out1_im_1;
      END IF;
    END IF;
  END PROCESS reduced_3_process;


  Product12_mul_temp <= Product1_C2ReIm_1_C2ReIm_B * Product1_C2ReIm_2_C2ReIm_B;
  Product1_Re_BD <= Product12_mul_temp(30 DOWNTO 13);

  Product11_mul_temp <= Product1_C2ReIm_1_C2ReIm_A * Product1_C2ReIm_2_C2ReIm_B;
  Product1_Im_AD <= Product11_mul_temp(30 DOWNTO 13);

  PipelineRegister1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_Im_AD_1 <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_Im_AD_1 <= Product1_Im_AD;
      END IF;
    END IF;
  END PROCESS PipelineRegister1_process;


  Product13_mul_temp <= Product1_C2ReIm_1_C2ReIm_B * Product1_C2ReIm_2_C2ReIm_A;
  Product1_Im_BC <= Product13_mul_temp(30 DOWNTO 13);

  PipelineRegister2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_Re_BD_1 <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_Re_BD_1 <= Product1_Re_BD;
      END IF;
    END IF;
  END PROCESS PipelineRegister2_process;


  mulOutput <= Product1_Re_AC_1 - Product1_Re_BD_1;

  PipelineRegister3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_Im_BC_1 <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Product1_Im_BC_1 <= Product1_Im_BC;
      END IF;
    END IF;
  END PROCESS PipelineRegister3_process;


  mulOutput_1 <= Product1_Im_AD_1 + Product1_Im_BC_1;

  Delay7_output_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_out1_re <= to_signed(16#00000#, 18);
      Product1_out1_im <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_1 = '1' THEN
        Product1_out1_re <= mulOutput;
        Product1_out1_im <= mulOutput_1;
      END IF;
    END IF;
  END PROCESS Delay7_output_process;


  delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Product1_out1_re_1 <= to_signed(16#00000#, 18);
      Product1_out1_im_1 <= to_signed(16#00000#, 18);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Product1_out1_re_1 <= Product1_out1_re;
        Product1_out1_im_1 <= Product1_out1_im;
      END IF;
    END IF;
  END PROCESS delay_process;


  Out1_re <= std_logic_vector(Product1_out1_re_1);

  Out1_im <= std_logic_vector(Product1_out1_im_1);

END rtl;

