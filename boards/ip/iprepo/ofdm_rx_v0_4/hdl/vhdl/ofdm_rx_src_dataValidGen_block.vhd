-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\OFDM_Rx_HW\ofdm_rx_src_dataValidGen_block.vhd
-- Created: 2022-03-24 22:06:16
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_rx_src_dataValidGen_block
-- Source Path: OFDM_Rx_HW/OFDMRx/Synchronisation/ControlSigGen/dataValidGen
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_rx_src_dataValidGen_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_12_0                        :   IN    std_logic;
        enb_1                             :   IN    std_logic;
        enb1                              :   IN    std_logic;
        y                                 :   OUT   std_logic
        );
END ofdm_rx_src_dataValidGen_block;


ARCHITECTURE rtl OF ofdm_rx_src_dataValidGen_block IS

  -- Signals
  SIGNAL NOT1_out1                        : std_logic;
  SIGNAL Delay_out1                       : std_logic;
  SIGNAL AND_out1                         : std_logic;
  SIGNAL NOT_out1                         : std_logic;
  SIGNAL HDL_Counter_out1                 : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Compare_To_Constant_out1         : std_logic;

BEGIN
  NOT1_out1 <=  NOT enb_1;

  Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay_out1 <= enb1;
      END IF;
    END IF;
  END PROCESS Delay_process;


  AND_out1 <= NOT1_out1 AND Delay_out1;

  NOT_out1 <=  NOT AND_out1;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 79
  HDL_Counter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      HDL_Counter_out1 <= to_unsigned(16#00#, 7);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        IF NOT_out1 = '1' THEN 
          HDL_Counter_out1 <= to_unsigned(16#00#, 7);
        ELSIF AND_out1 = '1' THEN 
          IF HDL_Counter_out1 >= to_unsigned(16#4F#, 7) THEN 
            HDL_Counter_out1 <= to_unsigned(16#00#, 7);
          ELSE 
            HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(16#01#, 7);
          END IF;
        END IF;
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Compare_To_Constant_out1 <= '1' WHEN HDL_Counter_out1 > to_unsigned(16#0F#, 7) ELSE
      '0';

  y <= Compare_To_Constant_out1;

END rtl;

