-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\OFDM_Rx_HW\ofdm_rx_src_FFT.vhd
-- Created: 2022-03-24 22:06:16
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: ofdm_rx_src_FFT
-- Source Path: OFDM_Rx_HW/OFDMRx/FFT
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY ofdm_rx_src_FFT IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_12_0                        :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        FFTValidIn                        :   IN    std_logic;
        dataValid                         :   IN    std_logic;
        preambleValid                     :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
        dataOut_im                        :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
        dataValidOut                      :   OUT   std_logic;
        preambleValidOut                  :   OUT   std_logic
        );
END ofdm_rx_src_FFT;


ARCHITECTURE rtl OF ofdm_rx_src_FFT IS

  -- Component Declarations
  COMPONENT ofdm_rx_src_FFT_HDL_Optimized
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_12_0                      :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
          dataOut_im                      :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En14
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : ofdm_rx_src_FFT_HDL_Optimized
    USE ENTITY work.ofdm_rx_src_FFT_HDL_Optimized(rtl);

  -- Signals
  SIGNAL FFT_HDL_Optimized_out1_re        : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL FFT_HDL_Optimized_out1_im        : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL FFT_HDL_Optimized_out2           : std_logic;
  SIGNAL Delay2_reg                       : std_logic_vector(0 TO 172);  -- ufix1 [173]
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Delay1_reg                       : std_logic_vector(0 TO 172);  -- ufix1 [173]
  SIGNAL Delay1_out1                      : std_logic;

BEGIN
  u_FFT_HDL_Optimized : ofdm_rx_src_FFT_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_12_0 => enb_1_12_0,
              dataIn_re => dataIn_re,  -- sfix16_En14
              dataIn_im => dataIn_im,  -- sfix16_En14
              validIn => FFTValidIn,
              dataOut_re => FFT_HDL_Optimized_out1_re,  -- sfix22_En14
              dataOut_im => FFT_HDL_Optimized_out1_im,  -- sfix22_En14
              validOut => FFT_HDL_Optimized_out2
              );

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay2_reg(0) <= dataValid;
        Delay2_reg(1 TO 172) <= Delay2_reg(0 TO 171);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(172);

  Delay1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay1_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb_1_12_0 = '1' THEN
        Delay1_reg(0) <= preambleValid;
        Delay1_reg(1 TO 172) <= Delay1_reg(0 TO 171);
      END IF;
    END IF;
  END PROCESS Delay1_process;

  Delay1_out1 <= Delay1_reg(172);

  dataOut_re <= FFT_HDL_Optimized_out1_re;

  dataOut_im <= FFT_HDL_Optimized_out1_im;

  dataValidOut <= Delay2_out1;

  preambleValidOut <= Delay1_out1;

END rtl;

